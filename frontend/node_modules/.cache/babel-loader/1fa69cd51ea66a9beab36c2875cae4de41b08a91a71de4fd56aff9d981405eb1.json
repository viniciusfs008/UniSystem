{"ast":null,"code":"var _jsxFileName = \"/Users/viniciusferrari/dev/DashBoard/frontend/src/components/Charts/ChartBar.jsx\";\nimport Chart from \"react-apexcharts\";\nimport './chart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChartBar({\n  data,\n  selectedCities,\n  column,\n  title1,\n  title2,\n  horizontal,\n  name\n}) {\n  // Extrair os anos e as cidades do conjunto de dados\n  const valores = [...new Set(data.map(item => item[column]))];\n  let series = [];\n  // Calcular o total de casos para todas as cidades\n  const totalCasos = valores.map(valor => {\n    return data.filter(item => item[column] === valor).reduce((acc, curr) => acc + curr.NumeroCasos, 0);\n  });\n  if (selectedCities.length === 0) {\n    // Criar uma única série de dados para representar as porcentagens de casos\n    series.push({\n      name: name ? name : \"Percentual de Casos\",\n      data: totalCasos.map((total, index) => {\n        return total / totalCasos.reduce((a, b) => a + b, 0) * 100;\n      })\n    });\n  } else {\n    // Calcular as porcentagens de casos para cada cidade selecionada\n    series = selectedCities.map(city => {\n      const cityTotal = data.filter(item => item.MunicipioResidencia === city).reduce((acc, curr) => acc + curr.NumeroCasos, 0);\n      return {\n        name: city,\n        data: valores.map(valor => {\n          const record = data.find(item => item[column] === valor && item.MunicipioResidencia === city);\n          return record ? record.NumeroCasos / cityTotal * 100 : 0;\n        })\n      };\n    });\n  }\n\n  // Configurações do gráfico\n  const options = {\n    dataLabels: {\n      formatter: function (val) {\n        return val.toFixed(0) + \"%\"; // Formatar para duas casas decimais\n      },\n      enabled: true\n    },\n    chart: {\n      type: \"bar\"\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 4,\n        borderRadiusApplication: \"end\",\n        horizontal: horizontal\n      }\n    },\n    xaxis: {\n      categories: valores,\n      title: {\n        text: title1,\n        style: {\n          color: \"var(--text-50)\"\n        }\n      },\n      labels: {\n        formatter: function (val) {\n          return val.toFixed(0) + \"%\"; // Formatar para duas casas decimais\n        },\n        style: {\n          colors: \"var(--text-50)\"\n        }\n      }\n    },\n    yaxis: {\n      title: {\n        text: title2,\n        style: {\n          color: \"var(--text-50)\",\n          transition: \"all 0.3s\"\n        }\n      },\n      labels: {\n        style: {\n          colors: \"var(--text-50)\"\n        }\n      }\n    },\n    tooltip: {\n      theme: false,\n      y: {\n        formatter: function (val) {\n          return val.toFixed(2) + \"%\";\n        }\n      }\n    },\n    legend: {\n      labels: {\n        colors: \"var(--text-50)\"\n      },\n      markers: {\n        radius: \"50%\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: options,\n    series: series,\n    type: \"bar\",\n    height: \"100%\",\n    width: \"100%\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 7\n  }, this);\n}\n_c = ChartBar;\nvar _c;\n$RefreshReg$(_c, \"ChartBar\");","map":{"version":3,"names":["Chart","jsxDEV","_jsxDEV","ChartBar","data","selectedCities","column","title1","title2","horizontal","name","valores","Set","map","item","series","totalCasos","valor","filter","reduce","acc","curr","NumeroCasos","length","push","total","index","a","b","city","cityTotal","MunicipioResidencia","record","find","options","dataLabels","formatter","val","toFixed","enabled","chart","type","plotOptions","bar","borderRadius","borderRadiusApplication","xaxis","categories","title","text","style","color","labels","colors","yaxis","transition","tooltip","theme","y","legend","markers","radius","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viniciusferrari/dev/DashBoard/frontend/src/components/Charts/ChartBar.jsx"],"sourcesContent":["import Chart from \"react-apexcharts\";\nimport './chart.css';\n\nexport default function ChartBar({ data, selectedCities, column, title1, title2, horizontal, name}) {\n  // Extrair os anos e as cidades do conjunto de dados\n  const valores = [...new Set(data.map((item) => item[column]))];\n\n  let series = [];\n  // Calcular o total de casos para todas as cidades\n  const totalCasos = valores.map((valor) => {\n    return data\n      .filter((item) => item[column] === valor)\n      .reduce((acc, curr) => acc + curr.NumeroCasos, 0);\n  });\n\n  if (selectedCities.length === 0) {\n    // Criar uma única série de dados para representar as porcentagens de casos\n    series.push({\n      name: name ? name : \"Percentual de Casos\",\n      data: totalCasos.map((total, index) => {\n        return (total / totalCasos.reduce((a, b) => a + b, 0)) * 100;\n      }),\n    });\n  } else {\n    // Calcular as porcentagens de casos para cada cidade selecionada\n    series = selectedCities.map((city) => {\n      const cityTotal = data\n        .filter((item) => item.MunicipioResidencia === city)\n        .reduce((acc, curr) => acc + curr.NumeroCasos, 0);\n      return {\n        name: city,\n        data: valores.map((valor) => {\n          const record = data.find(\n            (item) =>\n              item[column] === valor && item.MunicipioResidencia === city\n          );\n          return record ? (record.NumeroCasos / cityTotal) * 100 : 0;\n        }),\n      };\n    });\n  }\n\n  // Configurações do gráfico\n  const options = {\n    dataLabels: {\n      formatter: function(val) {\n        return val.toFixed(0) + \"%\"; // Formatar para duas casas decimais\n      },\n      enabled: true,\n      \n    },\n    chart: {\n      type: \"bar\",\n    },\n    plotOptions: {\n      bar: {\n        borderRadius: 4,\n        borderRadiusApplication: \"end\",\n        horizontal: horizontal,\n      },\n    },\n    xaxis: {\n      categories: valores,\n      title: {\n        text: title1,\n        style: {\n          color: \"var(--text-50)\",\n        },\n      },\n      labels: {\n        formatter: function(val) {\n          return val.toFixed(0) + \"%\"; // Formatar para duas casas decimais\n        },\n        style: {\n          colors: \"var(--text-50)\",\n        },\n      },\n    },\n    yaxis: {\n      title: {\n        text: title2,\n        style: {\n          color: \"var(--text-50)\",\n          transition: \"all 0.3s\",\n        },\n      },\n      labels: {\n        \n        style: {\n          colors: \"var(--text-50)\",\n        },\n      },\n    },\n    tooltip: {\n      theme: false,\n      y: {\n        formatter: function (val) {\n          return val.toFixed(2) + \"%\";\n        },\n      },\n    },\n    legend: {\n      labels: {\n        colors: \"var(--text-50)\",\n      },\n      markers: {\n        radius: \"50%\",\n      },\n    },\n  };\n\n  return (\n      <Chart\n        options={options}\n        series={series}\n        type=\"bar\"\n        height=\"100%\"\n        width=\"100%\"\n      />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}