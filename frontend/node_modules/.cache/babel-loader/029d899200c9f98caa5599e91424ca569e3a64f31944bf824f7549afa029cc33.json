{"ast":null,"code":"var _jsxFileName = \"/app/src/pages/Maps/MapsObit.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./maps.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { fetchDataGet, fetchDataPost } from \"../../controler/comunicacao\";\nimport DropdownToolTip from \"../../components/Dropdown/DropdownToolTip\";\nimport Modal from \"../../components/Modal/Modal\";\nimport LoadingAnimation from \"../../components/LoadingAnimation/LoadingAnimation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MapsNotif() {\n  _s();\n  const [flag, setFlag] = useState(false);\n  const [mapa, setMapa] = useState({});\n  const [years, setYears] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [selectedMapa, setSelectedMapa] = useState(\"incidencia\");\n  const [selectedYears, setSelectedYears] = useState([]);\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedTipo, setSelectedTipo] = useState(\"Negativo\");\n  const [tempSelectedMapa, setTempSelectedMapa] = useState(\"incidencia\");\n  const [tempSelectedCities, setTempSelectedCities] = useState([]);\n  const [tempSelectedYears, setTempSelectedYears] = useState([]);\n  const [loadingMapa, setLoadingMapa] = useState(true);\n  const [taskId, setTaskId] = useState([]);\n  const iframeRef = useRef(null);\n  const [aplicar, setAplicar] = useState(true);\n  const valuesTypes = [\"incidencia\", \"calor\", \"cluster\", \"moran\"];\n  const mapTypes = {\n    incidencia: \"Mapa de Incidência\",\n    calor: \"Mapa de Calor\",\n    cluster: \"Mapa de Cluster\",\n    moran: \"Mapa de Moran\"\n  };\n\n  // Função para adicionar ou remover uma cidade da lista de selecionadas\n  const toggleCitySelection = city => {\n    if (city === \"Todos\") {\n      setTempSelectedCities([]);\n    } else if (tempSelectedCities.includes(city)) {\n      setTempSelectedCities(tempSelectedCities.filter(item => item !== city));\n    } else {\n      setTempSelectedCities([...tempSelectedCities, city]);\n    }\n  };\n\n  // Função para adicionar ou remover um ano da lista de selecionadas\n  const handleYearSelect = year => {\n    let currentYears = tempSelectedYears;\n    if (currentYears.includes(year)) {\n      if (currentYears.includes(\"Todos\")) {\n        currentYears = [];\n      } else {\n        currentYears = currentYears.filter(y => y !== year);\n      }\n    } else if (year === \"ultimos 10 anos\") {\n      currentYears = [];\n    } else {\n      if (currentYears.includes(\"Todos\")) {\n        currentYears = currentYears.filter(y => y !== \"Todos\");\n      }\n      if (year === \"Todos\") {\n        currentYears = [\"Todos\"];\n      } else {\n        currentYears = [...currentYears, year];\n      }\n    }\n    setTempSelectedYears(currentYears);\n  };\n\n  // FUNCAO PARA BUSCAS OS ANOS E CIDADES DISPONIVEIS PARA COLOCAR NOS SELECTS\n  useEffect(() => {\n    Promise.all([fetchDataGet(\"/tuberculose/coluna/AnoNotificacao\"), fetchDataGet(\"/tuberculose/coluna/MunicipioResidencia\")]).then(([data, municipios]) => {\n      if (data !== undefined) {\n        setYears(data.sort().reverse());\n      }\n      if (municipios !== undefined) {\n        setCities(municipios.sort());\n      }\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    const fetchMapData = async () => {\n      setLoadingMapa(true);\n      const params = {\n        doenca: \"TU\",\n        tipo: \"OBITOS\",\n        AnoNotificacao: selectedYears.length > 0 ? selectedYears : [\"ultimos 10 anos\"],\n        tipo_mapa: selectedMapa,\n        HIV: selectedTipo\n      };\n      try {\n        const response = await fetchDataPost(\"/tuberculose/mapa/\", params);\n        const data = response; // Assumindo que response é um objeto\n        if (data.status === \"Encerrado\") {\n          setMapa(data.mapa);\n          setLoadingMapa(false);\n        } else if (data.status === \"Não criado\") {\n          alert(\"O mapa está sendo Criado\");\n          setTaskId(true);\n        } else {\n          setTaskId(true);\n        }\n      } catch (error) {\n        console.error(\"Error requesting map:\", error);\n        setLoadingMapa(false);\n      }\n    };\n    fetchMapData();\n  }, [aplicar, taskId]);\n  useEffect(() => {\n    if (taskId === true) {\n      const interval = setInterval(async () => {\n        setTaskId(false);\n      }, 2000); // Polling interval de 2 segundos\n\n      return () => clearInterval(interval);\n    }\n  }, [taskId]);\n  const handleAplicar = () => {\n    setSelectedCities(tempSelectedCities);\n    setSelectedYears(tempSelectedYears);\n    setSelectedMapa(tempSelectedMapa);\n    setAplicar(!aplicar);\n  };\n\n  // USE EFFECT PARA ATULIALIZAR AS CIDADES MARCADAS NO MAPA ENVIANDO UMA REQUISIÇÃO PARA\n  // DENTRO DO ARQUIVO HTML DO MAPA\n  useEffect(() => {\n    const iframe = document.querySelector(\".map-container\");\n    iframe.contentWindow.postMessage({\n      selectedCities\n    }, \"*\");\n  }, [selectedCities, selectedYears]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"maps\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titulo p-3 d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titulo-nome\",\n            children: \"Mapas de \\xD3bitos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"filter-button\",\n            onClick: () => setFlag(!flag),\n            children: \"Filtros\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"on \" + (flag ? \"show mb-3\" : \"hide mb-0\"),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row on-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"titulo p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"filtros-wrapper\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"filtros mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"filtro pe-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-header d-flex justify-content-between align-items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"m-0\",\n                        children: \"Escolha um Ano\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 183,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(DropdownToolTip, {\n                        children: \"escrever coisa aqui\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 182,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-body\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-check\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            id: \"year-todos\",\n                            value: \"Todos\",\n                            className: \"form-check-input\",\n                            checked: tempSelectedYears.length === 0,\n                            onChange: () => handleYearSelect(\"ultimos 10 anos\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 189,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"year-todos\",\n                            className: \"form-check-label\",\n                            children: \"ULTIMOS 10 ANOS\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 199,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            id: \"year-todos\",\n                            value: \"Todos\",\n                            className: \"form-check-input\",\n                            checked: tempSelectedYears.includes(\"Todos\"),\n                            onChange: () => handleYearSelect(\"Todos\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 208,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"year-todos\",\n                            className: \"form-check-label\",\n                            children: \"TODOS\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 216,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 27\n                        }, this), years.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            id: `year-${item}`,\n                            value: item,\n                            className: \"form-check-input\",\n                            checked: tempSelectedYears.includes(item),\n                            onChange: () => handleYearSelect(item)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 225,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: `year-${item}`,\n                            className: \"form-check-label\",\n                            children: item\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 233,\n                            columnNumber: 31\n                          }, this)]\n                        }, item, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 224,\n                          columnNumber: 29\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 181,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"filtro pe-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-header d-flex justify-content-between align-items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"m-0\",\n                        children: \"Escolha uma Cidade\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(DropdownToolTip, {\n                        children: \"escrever coisa aqui\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-body\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-check\",\n                        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"checkbox\",\n                          id: \"city-todos\",\n                          value: \"Todos\",\n                          className: \"form-check-input\",\n                          checked: tempSelectedCities.length === 0,\n                          onChange: () => toggleCitySelection(\"Todos\")\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                          htmlFor: \"city-todos\",\n                          className: \"form-check-label\",\n                          children: \"TODAS\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 264,\n                          columnNumber: 27\n                        }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            id: `city-${city}`,\n                            value: city,\n                            className: \"form-check-input\",\n                            checked: tempSelectedCities.includes(city),\n                            onChange: () => toggleCitySelection(city)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 272,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: `city-${city}`,\n                            className: \"form-check-label\",\n                            children: city\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 280,\n                            columnNumber: 31\n                          }, this)]\n                        }, city, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 29\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 254,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"filtro pe-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-header d-flex justify-content-between align-items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"m-0\",\n                        children: \"Escolha um Mapa\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(DropdownToolTip, {\n                        children: \"escrever coisa aqui\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-body\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-check\",\n                        children: valuesTypes.map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            id: `mapa-${key}`,\n                            value: key,\n                            className: \"form-check-input\",\n                            checked: tempSelectedMapa === key,\n                            onChange: () => setTempSelectedMapa(key)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 305,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: `mapa-${key}`,\n                            className: \"form-check-label\",\n                            children: mapTypes[key]\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 313,\n                            columnNumber: 31\n                          }, this)]\n                        }, key, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 29\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 302,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"filtro pe-3\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-header d-flex justify-content-between align-items-center\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                        className: \"m-0\",\n                        children: \"Tipo\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 331,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(DropdownToolTip, {\n                        children: \"escrever coisa aqui\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 332,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"card-body\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"form-check\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            id: \"tipo-TB\",\n                            value: \"TB\",\n                            className: \"form-check-input\",\n                            checked: selectedTipo === \"Negativo\",\n                            onChange: () => setSelectedTipo(\"Negativo\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 338,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"tipo-TB\",\n                            className: \"form-check-label\",\n                            children: \"Tuberculose\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 346,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 337,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"\",\n                          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                            type: \"checkbox\",\n                            id: \"tipo-TB-HIV\",\n                            value: \"TB-HIV\",\n                            className: \"form-check-input\",\n                            checked: selectedTipo === \"Positivo\",\n                            onChange: () => setSelectedTipo(\"Positivo\")\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 355,\n                            columnNumber: 29\n                          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"tipo-TB-HIV\",\n                            className: \"form-check-label\",\n                            children: \"Tuberculose + HIV\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 363,\n                            columnNumber: 29\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 354,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 335,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"filter-button mt-3\",\n              onClick: () => handleAplicar(),\n              children: \"Aplicar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"m-0\",\n            children: mapTypes[selectedMapa]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-inline-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(DropdownToolTip, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Mapas dos casos notificados no Estado de Mato Grosso.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Alterne entre os mapas de Incidencia, de calor, de cluster e de Moran(n\\xE3o pode ser filtrado por ano).\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: \"Os mapas s\\xE3o filtrados apenas por UM ano especifico.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Modal, {\n              title: mapTypes[selectedMapa],\n              id: \"ModalMap\",\n              children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n                srcDoc: mapa,\n                title: \"Mapa Tuberculose\",\n                width: \"100%\",\n                height: \"100%\",\n                className: \"map-container\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body p-0 a\",\n          children: loadingMapa === true ? /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n            ref: iframeRef,\n            srcDoc: mapa,\n            title: \"Mapa Tuberculose\",\n            width: \"100%\",\n            height: \"100%\",\n            className: \"map-container\",\n            onLoad: () => {\n              if (iframeRef.current) {\n                iframeRef.current.contentWindow.postMessage({\n                  selectedCities\n                }, \"*\");\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n}\n_s(MapsNotif, \"NqDG0aoWT01O4EDxzkLuvbEeSAg=\");\n_c = MapsNotif;\nvar _c;\n$RefreshReg$(_c, \"MapsNotif\");","map":{"version":3,"names":["React","useState","useEffect","useRef","fetchDataGet","fetchDataPost","DropdownToolTip","Modal","LoadingAnimation","jsxDEV","_jsxDEV","MapsNotif","_s","flag","setFlag","mapa","setMapa","years","setYears","cities","setCities","selectedMapa","setSelectedMapa","selectedYears","setSelectedYears","selectedCities","setSelectedCities","selectedTipo","setSelectedTipo","tempSelectedMapa","setTempSelectedMapa","tempSelectedCities","setTempSelectedCities","tempSelectedYears","setTempSelectedYears","loadingMapa","setLoadingMapa","taskId","setTaskId","iframeRef","aplicar","setAplicar","valuesTypes","mapTypes","incidencia","calor","cluster","moran","toggleCitySelection","city","includes","filter","item","handleYearSelect","year","currentYears","y","Promise","all","then","data","municipios","undefined","sort","reverse","catch","error","console","fetchMapData","params","doenca","tipo","AnoNotificacao","length","tipo_mapa","HIV","response","status","alert","interval","setInterval","clearInterval","handleAplicar","iframe","document","querySelector","contentWindow","postMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","id","value","checked","onChange","htmlFor","map","key","title","srcDoc","width","height","ref","onLoad","current","_c","$RefreshReg$"],"sources":["/app/src/pages/Maps/MapsObit.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./maps.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { fetchDataGet, fetchDataPost } from \"../../controler/comunicacao\";\nimport DropdownToolTip from \"../../components/Dropdown/DropdownToolTip\";\nimport Modal from \"../../components/Modal/Modal\";\nimport LoadingAnimation from \"../../components/LoadingAnimation/LoadingAnimation\";\n\nexport default function MapsNotif() {\n  const [flag, setFlag] = useState(false);\n\n  const [mapa, setMapa] = useState({});\n  const [years, setYears] = useState([]);\n  const [cities, setCities] = useState([]);\n\n  const [selectedMapa, setSelectedMapa] = useState(\"incidencia\");\n  const [selectedYears, setSelectedYears] = useState([]);\n  const [selectedCities, setSelectedCities] = useState([]);\n  const [selectedTipo, setSelectedTipo] = useState(\"Negativo\");\n  const [tempSelectedMapa, setTempSelectedMapa] = useState(\"incidencia\");\n  const [tempSelectedCities, setTempSelectedCities] = useState([]);\n  const [tempSelectedYears, setTempSelectedYears] = useState([]);\n\n  const [loadingMapa, setLoadingMapa] = useState(true);\n\n  const [taskId, setTaskId] = useState([]);\n  const iframeRef = useRef(null);\n  const [aplicar, setAplicar] = useState(true);\n\n  const valuesTypes = [\"incidencia\", \"calor\", \"cluster\", \"moran\"];\n\n  const mapTypes = {\n    incidencia: \"Mapa de Incidência\",\n    calor: \"Mapa de Calor\",\n    cluster: \"Mapa de Cluster\",\n    moran: \"Mapa de Moran\",\n  };\n\n  // Função para adicionar ou remover uma cidade da lista de selecionadas\n  const toggleCitySelection = (city) => {\n    if (city === \"Todos\") {\n      setTempSelectedCities([]);\n    } else if (tempSelectedCities.includes(city)) {\n      setTempSelectedCities(tempSelectedCities.filter((item) => item !== city));\n    } else {\n      setTempSelectedCities([...tempSelectedCities, city]);\n    }\n  };\n\n  // Função para adicionar ou remover um ano da lista de selecionadas\n  const handleYearSelect = (year) => {\n    let currentYears = tempSelectedYears;\n\n    if (currentYears.includes(year)) {\n      if (currentYears.includes(\"Todos\")) {\n        currentYears = [];\n      } else {\n        currentYears = currentYears.filter((y) => y !== year);\n      }\n    } else if (year === \"ultimos 10 anos\") {\n      currentYears = [];\n    } else {\n      if (currentYears.includes(\"Todos\")) {\n        currentYears = currentYears.filter((y) => y !== \"Todos\");\n      }\n\n      if (year === \"Todos\") {\n        currentYears = [\"Todos\"];\n      } else {\n        currentYears = [...currentYears, year];\n      }\n    }\n\n    setTempSelectedYears(currentYears);\n  };\n\n  // FUNCAO PARA BUSCAS OS ANOS E CIDADES DISPONIVEIS PARA COLOCAR NOS SELECTS\n  useEffect(() => {\n    Promise.all([\n      fetchDataGet(\"/tuberculose/coluna/AnoNotificacao\"),\n      fetchDataGet(\"/tuberculose/coluna/MunicipioResidencia\"),\n    ])\n      .then(([data, municipios]) => {\n        if (data !== undefined) {\n          setYears(data.sort().reverse());\n        }\n        if (municipios !== undefined) {\n          setCities(municipios.sort());\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const fetchMapData = async () => {\n      setLoadingMapa(true);\n\n      const params = {\n        doenca: \"TU\",\n        tipo: \"OBITOS\",\n        AnoNotificacao:\n          selectedYears.length > 0 ? selectedYears : [\"ultimos 10 anos\"],\n        tipo_mapa: selectedMapa,\n        HIV: selectedTipo,\n      };\n\n      try {\n        const response = await fetchDataPost(\"/tuberculose/mapa/\", params);\n\n        const data = response; // Assumindo que response é um objeto\n        if (data.status === \"Encerrado\") {\n          setMapa(data.mapa);\n          setLoadingMapa(false);\n        } else if (data.status === \"Não criado\") {\n          alert(\"O mapa está sendo Criado\");\n          setTaskId(true);\n        } else {\n          setTaskId(true);\n        }\n      } catch (error) {\n        console.error(\"Error requesting map:\", error);\n        setLoadingMapa(false);\n      }\n    };\n\n    fetchMapData();\n  }, [aplicar, taskId]);\n\n  useEffect(() => {\n    if (taskId === true) {\n      const interval = setInterval(async () => {\n        setTaskId(false);\n      }, 2000); // Polling interval de 2 segundos\n\n      return () => clearInterval(interval);\n    }\n  }, [taskId]);\n\n  const handleAplicar = () => {\n    setSelectedCities(tempSelectedCities);\n    setSelectedYears(tempSelectedYears);\n    setSelectedMapa(tempSelectedMapa);\n    setAplicar(!aplicar)\n  };\n\n  // USE EFFECT PARA ATULIALIZAR AS CIDADES MARCADAS NO MAPA ENVIANDO UMA REQUISIÇÃO PARA\n  // DENTRO DO ARQUIVO HTML DO MAPA\n  useEffect(() => {\n    const iframe = document.querySelector(\".map-container\");\n    iframe.contentWindow.postMessage({ selectedCities }, \"*\");\n  }, [selectedCities, selectedYears]);\n\n  return (\n    <section className=\"maps\">\n\n      {/* TITULO */}\n\n      <div className=\"row mb-3\">\n        <div className=\"col-12\">\n          <div className=\"titulo p-3 d-flex justify-content-between align-items-center\">\n            <div className=\"titulo-nome\">Mapas de Óbitos</div>\n            <div className=\"filter-button\" onClick={() => setFlag(!flag)}>\n              Filtros\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* FILTROS */}\n\n      <div className={\"on \" + (flag ? \"show mb-3\" : \"hide mb-0\")}>\n        <div className=\"row on-content\">\n          <div className=\"col-12\">\n            <div className=\"titulo p-3\">\n              <div className=\"filtros-wrapper\">\n                <div className=\"filtros mb-3\">\n                  {/* SELECT DE ANO */}\n                  <div className=\"filtro pe-3\">\n                    <div className=\"card\">\n                      <div className=\"card-header d-flex justify-content-between align-items-center\">\n                        <h5 className=\"m-0\">Escolha um Ano</h5>\n                        <DropdownToolTip>escrever coisa aqui</DropdownToolTip>\n                      </div>\n                      <div className=\"card-body\">\n                        <div className=\"form-check\">\n                          <div className=\"\">\n                            <input\n                              type=\"checkbox\"\n                              id=\"year-todos\"\n                              value=\"Todos\"\n                              className=\"form-check-input\"\n                              checked={tempSelectedYears.length === 0}\n                              onChange={() =>\n                                handleYearSelect(\"ultimos 10 anos\")\n                              }\n                            />\n                            <label\n                              htmlFor=\"year-todos\"\n                              className=\"form-check-label\"\n                            >\n                              ULTIMOS 10 ANOS\n                            </label>\n                          </div>\n\n                          <div className=\"\">\n                            <input\n                              type=\"checkbox\"\n                              id=\"year-todos\"\n                              value=\"Todos\"\n                              className=\"form-check-input\"\n                              checked={tempSelectedYears.includes(\"Todos\")}\n                              onChange={() => handleYearSelect(\"Todos\")}\n                            />\n                            <label\n                              htmlFor=\"year-todos\"\n                              className=\"form-check-label\"\n                            >\n                              TODOS\n                            </label>\n                          </div>\n                          {years.map((item) => (\n                            <div key={item} className=\"\">\n                              <input\n                                type=\"checkbox\"\n                                id={`year-${item}`}\n                                value={item}\n                                className=\"form-check-input\"\n                                checked={tempSelectedYears.includes(item)}\n                                onChange={() => handleYearSelect(item)}\n                              />\n                              <label\n                                htmlFor={`year-${item}`}\n                                className=\"form-check-label\"\n                              >\n                                {item}\n                              </label>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* SELECT DE CIDADE */}\n\n                  <div className=\"filtro pe-3\">\n                    <div className=\"card\">\n                      <div className=\"card-header d-flex justify-content-between align-items-center\">\n                        <h5 className=\"m-0\">Escolha uma Cidade</h5>\n                        <DropdownToolTip>escrever coisa aqui</DropdownToolTip>\n                      </div>\n                      <div className=\"card-body\">\n                        <div className=\"form-check\">\n                          <input\n                            type=\"checkbox\"\n                            id=\"city-todos\"\n                            value=\"Todos\"\n                            className=\"form-check-input\"\n                            checked={tempSelectedCities.length === 0}\n                            onChange={() => toggleCitySelection(\"Todos\")}\n                          />\n                          <label\n                            htmlFor=\"city-todos\"\n                            className=\"form-check-label\"\n                          >\n                            TODAS\n                          </label>\n                          {cities.map((city) => (\n                            <div key={city} className=\"\">\n                              <input\n                                type=\"checkbox\"\n                                id={`city-${city}`}\n                                value={city}\n                                className=\"form-check-input\"\n                                checked={tempSelectedCities.includes(city)}\n                                onChange={() => toggleCitySelection(city)}\n                              />\n                              <label\n                                htmlFor={`city-${city}`}\n                                className=\"form-check-label\"\n                              >\n                                {city}\n                              </label>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* SELECT DE MAPA */}\n\n                  <div className=\"filtro pe-3\">\n                    <div className=\"card\">\n                      <div className=\"card-header d-flex justify-content-between align-items-center\">\n                        <h5 className=\"m-0\">Escolha um Mapa</h5>\n                        <DropdownToolTip>escrever coisa aqui</DropdownToolTip>\n                      </div>\n                      <div className=\"card-body\">\n                        <div className=\"form-check\">\n                          {valuesTypes.map((key) => (\n                            <div key={key} className=\"\">\n                              <input\n                                type=\"checkbox\"\n                                id={`mapa-${key}`}\n                                value={key}\n                                className=\"form-check-input\"\n                                checked={tempSelectedMapa === key}\n                                onChange={() => setTempSelectedMapa(key)}\n                              />\n                              <label\n                                htmlFor={`mapa-${key}`}\n                                className=\"form-check-label\"\n                              >\n                                {mapTypes[key]}\n                              </label>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* SELECT DE DOENÇA */}\n\n                  <div className=\"filtro pe-3\">\n                    <div className=\"card\">\n                      <div className=\"card-header d-flex justify-content-between align-items-center\">\n                        <h5 className=\"m-0\">Tipo</h5>\n                        <DropdownToolTip>escrever coisa aqui</DropdownToolTip>\n                      </div>\n                      <div className=\"card-body\">\n                        <div className=\"form-check\">\n\n                          <div className=\"\">\n                            <input\n                              type=\"checkbox\"\n                              id=\"tipo-TB\"\n                              value=\"TB\"\n                              className=\"form-check-input\"\n                              checked={selectedTipo === \"Negativo\"}\n                              onChange={() => setSelectedTipo(\"Negativo\")}\n                            />\n                            <label\n                              htmlFor=\"tipo-TB\"\n                              className=\"form-check-label\"\n                            >\n                              Tuberculose\n                            </label>\n                          </div>\n\n                          <div className=\"\">\n                            <input\n                              type=\"checkbox\"\n                              id=\"tipo-TB-HIV\"\n                              value=\"TB-HIV\"\n                              className=\"form-check-input\"\n                              checked={selectedTipo === \"Positivo\"}\n                              onChange={() => setSelectedTipo(\"Positivo\")}\n                            />\n                            <label\n                              htmlFor=\"tipo-TB-HIV\"\n                              className=\"form-check-label\"\n                            >\n                              Tuberculose + HIV\n                            </label>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <button className=\"filter-button mt-3\" onClick={()=>handleAplicar()}>Aplicar</button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* CARD MAPA */}\n      <div className=\"col-12 mb-3\">\n        <div className=\"card\">\n          <div className=\"card-header d-flex justify-content-between align-items-center\">\n            <h5 className=\"m-0\">{mapTypes[selectedMapa]}</h5>\n            <div className=\"d-inline-flex align-items-center\">\n              <DropdownToolTip>\n                <p>Mapas dos casos notificados no Estado de Mato Grosso.</p>\n                <p>\n                  Alterne entre os mapas de Incidencia, de calor, de cluster e\n                  de Moran(não pode ser filtrado por ano).\n                </p>\n                <p className=\"m-0\">\n                  Os mapas são filtrados apenas por UM ano especifico.\n                </p>\n              </DropdownToolTip>\n\n              <Modal title={mapTypes[selectedMapa]} id=\"ModalMap\">\n                <iframe\n                  srcDoc={mapa}\n                  title=\"Mapa Tuberculose\"\n                  width=\"100%\"\n                  height=\"100%\"\n                  className=\"map-container\"\n                />\n              </Modal>\n            </div>\n          </div>\n          <div className=\"card-body p-0 a\">\n            {loadingMapa === true ? (\n              <LoadingAnimation />\n            ) : (\n              <iframe\n                ref={iframeRef}\n                srcDoc={mapa}\n                title=\"Mapa Tuberculose\"\n                width=\"100%\"\n                height=\"100%\"\n                className=\"map-container\"\n                onLoad={() => {\n                  if (iframeRef.current) {\n                    iframeRef.current.contentWindow.postMessage(\n                      { selectedCities },\n                      \"*\"\n                    );\n                  }\n                }}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}