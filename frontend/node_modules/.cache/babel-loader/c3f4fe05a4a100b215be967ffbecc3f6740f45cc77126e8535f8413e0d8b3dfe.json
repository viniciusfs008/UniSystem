{"ast":null,"code":"import axios from \"axios\";\nconst host = process.env.REACT_APP_HOST_API;\nconst port = process.env.REACT_APP_PORT_API;\nexport async function fetchDataGet(rota) {\n  try {\n    const response = await axios.get(`http://${host}:${port}${rota}`);\n    co;\n    console.log(\"Dados recebidos: \" + response);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao obter os dados:\", error);\n  }\n}\nexport async function fetchDataPost(rota, data) {\n  try {\n    // console.log(\"Enviando dados para a rota: \" + rota);\n    // console.log(data);\n    const response = await axios.post(`http://${host}:${port}${rota}`, data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    // console.log(\"Dados recebidos da rota: \" + rota);\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao enviar os dados:\", error);\n  }\n}","map":{"version":3,"names":["axios","host","process","env","REACT_APP_HOST_API","port","REACT_APP_PORT_API","fetchDataGet","rota","response","get","co","console","log","data","error","fetchDataPost","post","headers"],"sources":["/app/src/controler/comunicacao.js"],"sourcesContent":["import axios from \"axios\";\n\nconst host = process.env.REACT_APP_HOST_API;\nconst port = process.env.REACT_APP_PORT_API;\n\nexport async function fetchDataGet(rota){\n  try {\n    const response = await axios.get(\n      `http://${host}:${port}${rota}`\n    );\n    co \n    console.log(\"Dados recebidos: \" + response);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao obter os dados:\", error);\n  }\n}\n\nexport async function fetchDataPost(rota, data) {\n  try {\n    // console.log(\"Enviando dados para a rota: \" + rota);\n    // console.log(data);\n    const response = await axios.post(\n      `http://${host}:${port}${rota}`,\n      data,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n    // console.log(\"Dados recebidos da rota: \" + rota);\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.error(\"Erro ao enviar os dados:\", error);\n  }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,kBAAkB;AAC3C,MAAMC,IAAI,GAAGH,OAAO,CAACC,GAAG,CAACG,kBAAkB;AAE3C,OAAO,eAAeC,YAAYA,CAACC,IAAI,EAAC;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC7B,UAAST,IAAK,IAAGI,IAAK,GAAEG,IAAK,EAChC,CAAC;IACDG,EAAE;IACFC,OAAO,CAACC,GAAG,CAAC,mBAAmB,GAAGJ,QAAQ,CAAC;IAC3C,OAAOA,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD;AACF;AAEA,OAAO,eAAeC,aAAaA,CAACR,IAAI,EAAEM,IAAI,EAAE;EAC9C,IAAI;IACF;IACA;IACA,MAAML,QAAQ,GAAG,MAAMT,KAAK,CAACiB,IAAI,CAC9B,UAAShB,IAAK,IAAGI,IAAK,GAAEG,IAAK,EAAC,EAC/BM,IAAI,EACJ;MACEI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IACD;IACA;IACA,OAAOT,QAAQ,CAACK,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EAClD;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}